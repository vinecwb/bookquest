generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String         @id @default(uuid())
  name      String
  email     String         @unique
  password  String
  createdAt DateTime       @default(now())
  books     BookUser[]
  interests UserInterest[]
}

model Book {
  id          String     @id @default(uuid())
  title       String
  author      String
  coverUrl    String?
  description String?
  link        String?
  createdAt   DateTime   @default(now())
  users       BookUser[]
}

model BookUser {
  id         String    @id @default(uuid())
  userId     String
  bookId     String
  progress   Int       @default(0) // 游댳 N칰mero de p치ginas lidas
  streak     Int       @default(0) // 游댳 Dias consecutivos de leitura
  dailyGoal  Int       @default(10) // 游댳 Meta di치ria de leitura (ex: 10 p치ginas)
  lastReadAt DateTime? // 游댳 칔ltimo dia de leitura
  createdAt  DateTime  @default(now())

  book Book @relation(fields: [bookId], references: [id])
  user User @relation(fields: [userId], references: [id])

  @@unique([userId, bookId]) // 游댳 Garante que cada usu치rio tenha um 칰nico registro por livro
}

model Interest {
  id    String         @id @default(uuid())
  name  String         @unique
  users UserInterest[]
}

model UserInterest {
  id         String @id @default(uuid())
  userId     String
  interestId String

  user     User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  interest Interest @relation(fields: [interestId], references: [id], onDelete: Cascade)

  @@unique([userId, interestId]) // 游댳 Garante que o usu치rio n칚o repita interesses
}
